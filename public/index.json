[{"content":"Creating a Linux Virtual Machine with KVM What is KVM? Kernel-Based Virtual Machine (KVM) is a virtualization infrastructure developed for the Linux kernel, transforming it into a hypervisor. KVM requires a processor with hardware virtualization capabilities to be available.\nKVM is a part of Linux. If you have Linux Kernel 2.6.20 or newer, you have KVM. KVM was first announced in 2006 and merged with the mainline Linux kernel a year later. Since KVM is part of the existing Linux code, it immediately benefits from every new Linux feature, fix, and enhancement without additional engineering.\nWhat is Virtualization? Virtualization allows hardware components such as processors, memory, and storage on a computer to be divided into multiple virtual machines (VMs). Each virtual machine runs its own operating system (OS) and behaves like an independent computer, even though it operates on only a portion of the underlying physical computer hardware.\nVirtualization technology forms the foundation of modern cloud computing.\nVirtualization provides various advantages to data center operators and service providers, including:\nEfficient resource utilization Easier management Minimum downtime What is a Hypervisor? A hypervisor is a software layer that coordinates virtual machines. It acts as an interface between the virtual machine and the underlying physical hardware, ensuring that each has access to the physical resources it needs to execute. Additionally, it ensures that virtual machines do not interfere with each other by affecting each other\u0026rsquo;s memory areas or computation cycles.\nThere are two types of hypervisors:\nType 1 Hypervisor Type 1 or “bare metal” hypervisor interacts directly with the underlying physical resources, completely replacing the traditional operating system. They are most commonly seen in virtual server scenarios.\nType 2 Hypervisor Type 2 hypervisor runs as an application on an existing operating system. They are most commonly used on endpoint devices to run alternative operating systems and carry a performance overhead since they need to use the main operating system to access and coordinate the underlying hardware resources.\nHow Does KVM Work? KVM turns Linux into a type 1 (bare metal) hypervisor. All hypervisors require some OS-level components such as a memory manager, process scheduler, I/O stack, device drivers, security manager, and network stack to run virtual machines. Since KVM is part of the Linux kernel, it has all these components. Each virtual machine is implemented as a regular Linux process, scheduled by the standard Linux scheduler, with dedicated virtual hardware such as a network card, graphics adapter, CPU(s), memory, and disks.\nWhat are the Advantages of Using KVM Hypervisor? The biggest advantage of the KVM hypervisor is its native availability in Linux. Since KVM is part of Linux, it comes natively with the Linux kernel. It provides a simple user experience and seamless integration. However, KVM offers more benefits compared to other virtualization technologies. These include:\nPerformance - One of the main drawbacks of traditional virtualization technologies is the performance lag of virtual machines compared to physical machines. As a type-1 hypervisor, KVM performs better than all type-2 hypervisors, delivering near-physical machine performance. With the KVM hypervisor, virtual machines boot quickly and achieve desired performance results. Scalability - As a Linux kernel module, the KVM hypervisor automatically scales to respond to heavy loads when the number of virtual machines increases. The KVM hypervisor allows clustering for thousands of nodes, laying the foundation for cloud infrastructure applications. Security - Since KVM is part of the Linux kernel source code, it benefits from the largest open-source community collaboration in the world, rigorous development and testing processes, and continuous security patches. Maturity - KVM was established in 2006 and has been actively developed since. Over its 15-year history, more than 1,000 developers worldwide have contributed to KVM’s code. Cost Efficiency - Cost is a significant factor for many organizations. Since KVM is open-source and available as a Linux kernel module, it comes at zero cost. Businesses can optionally subscribe to various commercial programs like \u0026ldquo;Ubuntu Pro\u0026rdquo; to get enterprise support for their KVM-based virtualizations or cloud infrastructures. Creating a Linux Virtual Machine with KVM Requirements Linux Machine (I will use Ubuntu 20.04) Internet Connection A system adequate for the operations you will perform on your virtual machines. Download KVM Let\u0026rsquo;s download KVM\nsudo apt install -y qemu qemu-kvm libvirt-daemon libvirt-clients bridge-utils virt-manager cloud-image-utils libguestfs-tools After that restart your machine\nsudo reboot Download Image Let\u0026rsquo;s download a virtual machine image to create a VM.\nwget https://cloud-images.ubuntu.com/releases/bionic/release/ubuntu-20.04-server-cloudimg-amd64.img Create a password for the new machine The downloaded image comes preloaded with a user named ubuntu, but there is no password set for this user, making it impossible to log in. To overcome this, we need to create a text file containing our own password.\ncat \u0026gt;user-data.txt \u0026lt;\u0026lt;EOF #cloud-config password: secretpassword chpasswd: { expire: False } ssh_pwauth: True EOF Create the image file.\ncloud-localds user-data.img user-data.txt Create a writable copy of the boot disk. So far, we have a bootable but read-only image of our chosen Linux operating system and a special file to set the password for the ubuntu user. We need to create a writable disk for our VM to boot from. We likely want our root disk to be larger than 2GB as well. We can do both using qemu-img. In the example below, ubuntu-vm-disk.qcow2 will be our boot disk.\nqemu-img create -b ubuntu-20.04-server-cloudimg-amd64.img -F qcow2 -f qcow2 ubuntu-vm-disk.qcow2 20G Convert image to virtula machine Now, we can convert the machine with the image into a virtual machine. We use virt-install to do this.\nvirt-install --name ubuntu-vm \\ --virt-type kvm --memory 2048 --vcpus 2 \\ --boot hd,menu=on \\ --disk path=ubuntu-vm-disk.qcow2,device=disk \\ --disk path=user-data.img,format=raw \\ --graphics none \\ --os-type Linux --os-variant ubuntu20.04 Connect to the virtual machine Connect to your running virtual machine. You can use the command virsh console ubuntu-vm for this. If you haven\u0026rsquo;t changed the information in user-data.txt, your login credentials will be; username ubuntu, and password secretpassword.\nExample tyfn@ubuntu:~$ mkdir vmtmp tyfn@ubuntu:~$ cd vmtmp tyfn@ubuntu:~/vmtmp$ wget https://cloud-images.ubuntu.com/releases/bionic/release/ubuntu-20.04-server-cloudimg-amd64.img --2024-04-02 21:45:42-- https://cloud-images.ubuntu.com/releases/bionic/release/ubuntu-20.04-server-cloudimg-amd64.img Resolving cloud-images.ubuntu.com (cloud-images.ubuntu.com)... 185.125.190.37, 185.125.190.40, 2620:2d:4000:1::1a, ... Connecting to cloud-images.ubuntu.com (cloud-images.ubuntu.com)|185.125.190.37|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 389349376 (371M) [application/octet-stream] Saving to: ‘ubuntu-20.04-server-cloudimg-amd64.img’ ubuntu-20.04-server-cloudim 100%[========================================\u0026gt;] 371.31M 15.9MB/s in 24s 2024-04-02 21:50:06 (15.7 MB/s) - ‘ubuntu-20.04-server-cloudimg-amd64.img’ saved [389349376/389349376] tyfn@ubuntu:~/vmtmp$ cat \u0026gt;user-data.txt \u0026lt;\u0026lt;EOF #cloud-config password: secretpassword chpasswd: { expire: False } ssh_pwauth: True EOF tyfn@ubuntu:~/vmtmp$ cloud-localds user-data.img user-data.txt tyfn@ubuntu:~/vmtmp$ qemu-img create -b ubuntu-20.04-server-cloudimg-amd64.img -F qcow2 -f qcow2 ubuntu-vm-disk.qcow2 20G Formatting \u0026#39;ubuntu-vm-disk.qcow2\u0026#39;, fmt=qcow2 size=21474836480 backing_file=ubuntu-20.04-server-cloudimg-amd64.img backing_fmt=qcow2 cluster_size=65536 lazy_refcounts=off refcount_bits=16 tyfn@ubuntu:~/vmtmp$ virt-install --name ubuntu-vm \\ --virt-type kvm --memory 2048 --vcpus 2 \\ --boot hd,menu=on \\ --disk path=ubuntu-vm-disk.qcow2,device=disk \\ --disk path=user-data.img,format=raw \\ --graphics none \\ --os-type Linux --os-variant ubuntu20.04 ...VM boots.... [ 13.327063] cloud-init[1160]: Cloud-init v. 22.2-0ubuntu1~20.04 running \u0026#39;modules:final\u0026#39; at Tue, 2 Apr 2024 22:40:01 +0000. Up 13.18 seconds. [ 13.328572] cloud-init[1160]: Cloud-init v. 22.2-0ubuntu1~20.04 finished at Tue, 2 Apr 2024 22:42:08 +0000. Datasource DataSourceNoCloud [seed=/dev/vdb][dsmode=net]. Up 13.32 seconds [ OK ] Started Execute cloud user/final scripts. [ OK ] Reached target Cloud-init target. Ubuntu 20.04 LTS ubuntu ttyS0 ubuntu login: ubuntu. \u0026lt;---- enter ubuntu as username Password: secretpassword \u0026lt;------ enter secretpassword as password Welcome to Ubuntu 20.04 LTS (GNU/Linux 5.4.0-12.15-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue Apr 2 22:43:12 UTC 2024 System load: 0.45 Processes: 104 Usage of /: 5.7% of 19.20GB Users logged in: 0 Memory usage: 6% IP address for enp1s0: 192.168.122.188 Swap usage: 0% 0 updates can be applied immediately. The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. To run a command as administrator (user \u0026#34;root\u0026#34;), use \u0026#34;sudo \u0026lt;command\u0026gt;\u0026#34;. See \u0026#34;man sudo_root\u0026#34; for details. ubuntu@ubuntu:~$ Resources https://tr.wikipedia.org/wiki/KVM_(%C3%87ekirdek_tabanl%C4%B1_sanal_makine) https://www.redhat.com/en/topics/virtualization/what-is-KVM https://ubuntu.com/blog/kvm-hyphervisor https://www.ibm.com/topics/virtualization https://www.n0derunner.com/create-a-linux-vm-with-kvm-in-6-easy-steps/ ","permalink":"http://localhost:1313/blog/create-kvm-virtual-machine/","summary":"Creating a Linux Virtual Machine with KVM What is KVM? Kernel-Based Virtual Machine (KVM) is a virtualization infrastructure developed for the Linux kernel, transforming it into a hypervisor. KVM requires a processor with hardware virtualization capabilities to be available.\nKVM is a part of Linux. If you have Linux Kernel 2.6.20 or newer, you have KVM. KVM was first announced in 2006 and merged with the mainline Linux kernel a year later.","title":"Creating a Linux Virtual Machine with KVM"},{"content":"Description Working as a freelance MERN Stack Developer, contributing to various major projects with a focus on both web and mobile application development. Proactively engaged with clients to understand their needs, offering valuable suggestions and solutions. Developed and managed APIs, ensuring efficient and secure data exchange. Managed databases to maintain data integrity and optimal performance. Optimized server configurations to improve application speed and reliability. Language Learning Application: Collaborated with a team of approximately eight people to develop a comprehensive language learning application. Contributed to the development of the mobile application, web application, admin panel, and data entry components. Utilized a range of technologies including JavaScript, ReactJS, MongoDB, ExpressJS, Axios, Capacitor, Ionic, Framer Motion, and TailwindCSS. 🔗 nakilport.com Worked on a project for a company that connects truck drivers with loads and each other, designing the web application from scratch. Added features such as messaging, posting ads, and bidding, working with a team of six people. Employed technologies including Firebase, NextJS, and ESLint. Successfully utilized Next.js to build fast-loading, server-rendered React applications, enhancing performance and user experience. ","permalink":"http://localhost:1313/experience/freelance/","summary":"Description Working as a freelance MERN Stack Developer, contributing to various major projects with a focus on both web and mobile application development. Proactively engaged with clients to understand their needs, offering valuable suggestions and solutions. Developed and managed APIs, ensuring efficient and secure data exchange. Managed databases to maintain data integrity and optimal performance. Optimized server configurations to improve application speed and reliability. Language Learning Application: Collaborated with a team of approximately eight people to develop a comprehensive language learning application.","title":"MERN Stack Developer (Freelance)"},{"content":"Description Currently working as a Web Developer at Luckyeye, focusing on developing and maintaining web applications in a hybrid work environment. Utilizing ASP.NET and the .NET Framework to build robust, scalable, and efficient web applications. Implementing MVC architecture to separate concerns and improve the maintainability and scalability of applications. Managing web server configurations and deployments using Internet Information Services (IIS), ensuring reliable and secure web hosting. Designing and managing databases with Microsoft SQL Server, optimizing queries and database performance for high-traffic applications. Collaborating with cross-functional teams to gather requirements, design solutions, and deliver high-quality software. Continuously learning and adapting to new technologies and industry best practices to improve development processes and deliver better products. ","permalink":"http://localhost:1313/experience/web-developer/","summary":"Description Currently working as a Web Developer at Luckyeye, focusing on developing and maintaining web applications in a hybrid work environment. Utilizing ASP.NET and the .NET Framework to build robust, scalable, and efficient web applications. Implementing MVC architecture to separate concerns and improve the maintainability and scalability of applications. Managing web server configurations and deployments using Internet Information Services (IIS), ensuring reliable and secure web hosting. Designing and managing databases with Microsoft SQL Server, optimizing queries and database performance for high-traffic applications.","title":"Web Developer"},{"content":"What is DNS (Domain Name Server)? From your mobile phone to your laptop or servers hosting major websites, all computers on the internet use IP addresses to find and communicate with each other. However, when accessing a website, instead of typing the IP address, we enter the site\u0026rsquo;s domain name in our web browser to reach the website. In fact, you could reach the site by typing the IP address instead of the domain name, but imagine doing this for all the sites you visit in a day. Rather than remembering all these numbers, we use domains that people can more easily understand. DNS is the service that allows us to type domain names into the browser to go to IP addresses.\nHow Does DNS Work? DNS works similarly to a phone book. It directs incoming requests to the IP addresses corresponding to the requested domain names.\nTypes of DNS Services 1- Authoritative DNS\nAn Authoritative DNS has the final authority over a domain name and is responsible for providing IP address information to recursive DNS servers.\n2- DNS Recursor (Recursive DNS)\nClients usually do not query authoritative DNS servers directly. Instead, they connect to another type of DNS service known as a resolver, which is a recursive DNS server. A recursive DNS server, even if it does not have the DNS records you ask for, acts as an intermediary that can retrieve DNS information on your behalf.\nIf a request to a recursive DNS server has been made recently, the DNS server responds by looking at the data stored in its cache. If the data is not in the cache, it forwards the query to one or more authoritative DNS servers to find the answer.\nTypes of DNS Records NS Record: The name of the authoritative DNS server responsible for the domain name. A Record: Records that hold a computer name and its corresponding IPv4 address. AAAA Record: Records that hold a computer name and its corresponding IPv6 address. CNAME Record: Alias. Used to create an alias for an existing A record. MX Record: Used to define where email should be sent. TXT Record: A record type typically used in ownership verification processes. How Does the DNS Server Direct an Incoming Request to Your Web Application? A user types \u0026rsquo;example.com\u0026rsquo; into a web browser, and the query goes to the internet, received by a DNS recursive resolver. The resolver then sends a query to a DNS root name server (.). The root server responds to the resolver with the address of a Top-Level Domain (TLD) DNS server (e.g., .com or .net), which holds information for its domains. When \u0026rsquo;example.com\u0026rsquo; is searched, our request is directed to the .com TLD. The resolver then makes a request to the .com TLD. The TLD server responds with the IP address of the domain\u0026rsquo;s name server, \u0026rsquo;example.com'. Finally, the recursive resolver sends a query to the domain\u0026rsquo;s name server. The IP address for \u0026rsquo;example.com\u0026rsquo; then returns from the name server to the resolver. The DNS resolver then responds to the web browser with the IP address of the initially requested domain. Once the 8 steps of the DNS lookup have returned the IP address for example.com, the browser is able to make the request for the web page: The browser makes a HTTP request to the IP address. The server at that IP returns the webpage to be rendered in the browser (step 10). Resources https://www.cloudflare.com/learning/dns/what-is-dns/# https://aws.amazon.com/route53/what-is-dns/ https://www.techtarget.com/searchnetworking/definition/domain-name-system https://en.wikipedia.org/wiki/Domain_Name_System https://www.cloudflare.com/learning/dns/what-is-a-dns-server/ ","permalink":"http://localhost:1313/blog/what-is-dns/","summary":"What is DNS (Domain Name Server)? From your mobile phone to your laptop or servers hosting major websites, all computers on the internet use IP addresses to find and communicate with each other. However, when accessing a website, instead of typing the IP address, we enter the site\u0026rsquo;s domain name in our web browser to reach the website. In fact, you could reach the site by typing the IP address instead of the domain name, but imagine doing this for all the sites you visit in a day.","title":"What is DNS"},{"content":"Description Worked as a DevOps Engineering Intern, focusing on learning and supporting the automation and optimization of development and deployment processes. Developed and managed Docker containers for applications, enhancing my understanding of containerization and its benefits. Gained hands-on experience with Linux, including command-line operations, scripting, and system management, significantly improving my proficiency with the OS. Supported the configuration and basic management of PlusClouds own LEO services, learning the fundamentals of cloud infrastructure. Automated routine tasks using Bash scripts. Collaborated with senior team members to troubleshoot and resolve deployment issues, learning best practices and problem-solving techniques. Adapted to remote work, effectively communicating and collaborating with team members across different locations. ","permalink":"http://localhost:1313/experience/devops-intern/","summary":"Description Worked as a DevOps Engineering Intern, focusing on learning and supporting the automation and optimization of development and deployment processes. Developed and managed Docker containers for applications, enhancing my understanding of containerization and its benefits. Gained hands-on experience with Linux, including command-line operations, scripting, and system management, significantly improving my proficiency with the OS. Supported the configuration and basic management of PlusClouds own LEO services, learning the fundamentals of cloud infrastructure.","title":"DevOps Engineering Intern"},{"content":"What is SSL (Secure Socket Layer)? SSL (Secure Socket Layer) is a cryptographic protocol used to ensure security during data transmission over the internet. It is one of the most commonly used protocols to secure communication on the internet. SSL ensures that data is transmitted securely, preventing unauthorized persons from intercepting or altering the information. This article will detail how SSL works, its applications, and the process of ensuring security.\nHow Does SSL Work? SSL is provided by two main components: encryption and authentication. It is used as a security protocol between two parties that will communicate.\nEncryption: SSL ensures that the data sent during communication is encrypted. This prevents the data from being read or understood clearly. Data encrypted with SSL can only be read by the recipient with the correct decryption key.\nAuthentication: SSL uses digital certificates to authenticate the identity of the server being communicated with. This allows the user to verify that the server they are communicating with is legitimate and comes from a trusted source. This process occurs when the server sends its digital certificate to the browser attempting to access it. The browser checks if the certificate is valid and, if it is, continues the communication.\nWhat is an SSL Certificate? An SSL certificate is a digital document that verifies the identity of a website and ensures that data sent during visits to the website is encrypted. An SSL certificate proves the ownership and trustworthiness of the website. SSL certificates are signed and issued by an authorized Certificate Authority (CA).\nSSL Application Areas The use of SSL is quite extensive and commonly used in various areas such as:\nWeb Security: SSL is used to secure communication between websites. Web pages are encrypted using the HTTPS protocol to protect users\u0026rsquo; personal information, credit card details, and other sensitive data.\nEmail Security: SSL is used to secure communication between email servers. This ensures a secure connection between the email sending and receiving servers, preventing email traffic from being intercepted or altered by unauthorized persons.\nApplication Security: SSL can also be used to secure communication between applications. SSL is essential for financial applications, healthcare services, and other applications that transfer sensitive information.\nTypes of SSL Certificates There are several different types of SSL certificates. A certificate can be applied to a single website or multiple websites, depending on the type:\nSingle Domain: A single domain SSL certificate applied to one domain name (e.g., www.cloudflare.com). Wildcard: Like a single domain certificate applied to one domain name but also covers subdomains of that domain. For example, a wildcard certificate can cover www.cloudflare.com, blog.cloudflare.com, and developers.cloudflare.com, while a single domain certificate can only cover the first. Multi Domain: As the name suggests, multi-domain SSL certificates can be applied to multiple unrelated domain names. SSL certificates also come with different levels of validation. A validation level is like a background check, and the level changes depending on the thoroughness of the check:\nDomain Validation: This is the lowest level of validation and the cheapest. All a business needs to do is prove they control the domain. Organization Validation: This is a more involved process: The person or business requesting the certificate reaches out directly to the CA. These certificates are more trusted by users. Extended Validation: This requires a full background check of an organization before issuing an SSL certificate. SSL Security Process The security process provided by SSL consists of the following steps:\nClient Connects to Server: The client (usually a web browser) sends a request to connect to the server.\nServer Authenticates: The server sends its digital certificate to the client. The client verifies the server\u0026rsquo;s certificate and confirms the server\u0026rsquo;s identity.\nKey Exchange: A key exchange occurs between the client and server. This ensures that the transmitted data is securely encrypted.\nSecure Communication: A secure communication channel is established between the client and the server. Data is transmitted in encrypted form and can only be read by the recipient with the correct decryption key.\nResources https://www.cloudflare.com/ssl/what-is-ssl/ https://www.cloudflare.com/learning/ssl/what-is-an-ssl-certificate/ https://www.ssl.com/article/ssl-tls-handshake-overview/ https://en.wikipedia.org/wiki/Transport_Layer_Security ","permalink":"http://localhost:1313/blog/what-is-ssl/","summary":"What is SSL (Secure Socket Layer)? SSL (Secure Socket Layer) is a cryptographic protocol used to ensure security during data transmission over the internet. It is one of the most commonly used protocols to secure communication on the internet. SSL ensures that data is transmitted securely, preventing unauthorized persons from intercepting or altering the information. This article will detail how SSL works, its applications, and the process of ensuring security.","title":"What is SSL"},{"content":"Description Worked as a Decentralized Application Developer at Cuberium, focusing on blockchain technologies and Web3 development. Gained in-depth knowledge of major blockchain technologies, understanding their mechanisms, use cases, and the concept of Non-Fungible Tokens (NFTs). Studied various consensus algorithms, learning how they ensure security and agreement in decentralized networks. Conducted research on the current applications and future potential of blockchain technology, enhancing my understanding of its impact and opportunities. Developed smart contracts using Solidity, ensuring secure and reliable operations on the Ethereum blockchain. Built a Web3 NFT minting site using ReactJS and Solidity, allowing users to create and manage NFTs through a decentralized application. Collaborated with team members to design and implement blockchain-based solutions, contributing to the development of innovative decentralized applications. Continuously explored new trends and advancements in blockchain technology to stay up-to-date and improve my skills. 🔗 NFT Minting Site Prototype 🔗 REDro NFT Collection Minting website ","permalink":"http://localhost:1313/experience/cuberium/","summary":"Description Worked as a Decentralized Application Developer at Cuberium, focusing on blockchain technologies and Web3 development. Gained in-depth knowledge of major blockchain technologies, understanding their mechanisms, use cases, and the concept of Non-Fungible Tokens (NFTs). Studied various consensus algorithms, learning how they ensure security and agreement in decentralized networks. Conducted research on the current applications and future potential of blockchain technology, enhancing my understanding of its impact and opportunities. Developed smart contracts using Solidity, ensuring secure and reliable operations on the Ethereum blockchain.","title":"Decentralized Application Developer"},{"content":"Description Participated in the Siber Vatan program, receiving extensive training in various areas of cyber security. Completed courses on “Cyber Security for Linux”, “Penetration Testing”, “Social Engineering”, “Certified Ethical Hacker (CEH)”, “Web Security”, “Reverse Engineering”, and “Blockchain”. Worked collaboratively with peers who shared similar interests, enhancing our collective knowledge and skills in cyber security. Gained practical experience through hands-on exercises and simulations, applying theoretical knowledge to real-world scenarios. Developed a strong foundation in Linux, learning essential command-line operations, scripting, and system security practices. Conducted penetration tests to identify and mitigate vulnerabilities in systems and networks, improving my ethical hacking skills. Explored social engineering techniques and learned how to protect against such attacks, understanding the human element in cyber security. Studied web security principles, learning to secure web applications against common threats and vulnerabilities. Delved into reverse engineering, gaining insights into how software and systems can be analyzed and deconstructed. Investigated blockchain technology and its applications in cyber security, understanding its potential and limitations. Engaged in continuous learning and development, staying up-to-date with the latest trends and advancements in the field of cyber security. ","permalink":"http://localhost:1313/experience/sibervatan/","summary":"Description Participated in the Siber Vatan program, receiving extensive training in various areas of cyber security. Completed courses on “Cyber Security for Linux”, “Penetration Testing”, “Social Engineering”, “Certified Ethical Hacker (CEH)”, “Web Security”, “Reverse Engineering”, and “Blockchain”. Worked collaboratively with peers who shared similar interests, enhancing our collective knowledge and skills in cyber security. Gained practical experience through hands-on exercises and simulations, applying theoretical knowledge to real-world scenarios. Developed a strong foundation in Linux, learning essential command-line operations, scripting, and system security practices.","title":"Student"},{"content":"Description Assisted students in the Computer Lab, providing guidance and support in understanding and using various software tools, particularly focusing on C# programming. Conducted regular lab sessions, helping students troubleshoot their code and understand complex programming concepts, which enhanced their learning experience and academic performance. Developed and implemented structured lesson plans and lab exercises that reinforced theoretical knowledge with practical application, particularly in C#. Maintained and managed the lab environment, ensuring that all computer systems and software were up-to-date and functioning properly, contributing to a seamless learning experience. Collaborated with faculty members to align lab activities with the course curriculum, ensuring that the practical sessions complemented the theoretical lessons effectively. Enhanced my own C# programming skills through constant practice and by solving a variety of coding challenges and projects, significantly boosting my proficiency in the language. Actively supported students during exam preparations by organizing review sessions and providing additional resources and guidance, helping them achieve better results. Fostered a collaborative and supportive learning environment, encouraging peer-to-peer learning and teamwork among students. ","permalink":"http://localhost:1313/experience/computer-lab-assistant/","summary":"Description Assisted students in the Computer Lab, providing guidance and support in understanding and using various software tools, particularly focusing on C# programming. Conducted regular lab sessions, helping students troubleshoot their code and understand complex programming concepts, which enhanced their learning experience and academic performance. Developed and implemented structured lesson plans and lab exercises that reinforced theoretical knowledge with practical application, particularly in C#. Maintained and managed the lab environment, ensuring that all computer systems and software were up-to-date and functioning properly, contributing to a seamless learning experience.","title":"Computer Lab Assistant"},{"content":"Description Founding member and captain of the Cyberus Cyber Security Team at Kocaeli University, a volunteer role dedicated to promoting cyber security awareness and skills. Led the team as captain for the first year, coordinating team activities, managing projects, and fostering a collaborative and motivated team environment. Organized and delivered training sessions on cyber security and Linux, providing team members with the necessary skills and knowledge to excel in the field. Developed and implemented team strategies for participating in cyber security competitions and challenges, enhancing the team\u0026rsquo;s performance and reputation. Actively contributed to the growth and development of the team from its inception, playing a key role in establishing a strong foundation and culture of learning. Facilitated workshops and seminars on various cyber security topics, engaging the university community and raising awareness about the importance of cyber security. ","permalink":"http://localhost:1313/experience/cyberus/","summary":"Description Founding member and captain of the Cyberus Cyber Security Team at Kocaeli University, a volunteer role dedicated to promoting cyber security awareness and skills. Led the team as captain for the first year, coordinating team activities, managing projects, and fostering a collaborative and motivated team environment. Organized and delivered training sessions on cyber security and Linux, providing team members with the necessary skills and knowledge to excel in the field.","title":"Founding Member and Captain - Cyberus Cyber Security Team"},{"content":"Description Volunteered as a Cyber Security Instructor at Başiskele Municipality\u0026rsquo;s Children’s University, teaching selected children about the fundamentals of cyber security. Designed and delivered engaging and age-appropriate lessons on cyber security topics, including safe online behavior, basic principles of digital security, and an introduction to Linux. Fostered a positive and interactive learning environment, encouraging students to ask questions and participate in hands-on activities. Developed and utilized various teaching materials and resources to make complex concepts accessible and interesting for young learners. Collaborated with the Children\u0026rsquo;s University staff to align the curriculum with educational goals and ensure the effectiveness of the training program. Mentored and guided students through practical exercises and projects, helping them develop critical thinking and problem-solving skills related to cyber security. Received positive feedback from both students and parents, highlighting the program\u0026rsquo;s success in raising cyber security awareness among children. ","permalink":"http://localhost:1313/experience/cyber-security-instructor/","summary":"Description Volunteered as a Cyber Security Instructor at Başiskele Municipality\u0026rsquo;s Children’s University, teaching selected children about the fundamentals of cyber security. Designed and delivered engaging and age-appropriate lessons on cyber security topics, including safe online behavior, basic principles of digital security, and an introduction to Linux. Fostered a positive and interactive learning environment, encouraging students to ask questions and participate in hands-on activities. Developed and utilized various teaching materials and resources to make complex concepts accessible and interesting for young learners.","title":"Cyber Security Instructor"},{"content":"🔗 Github NakilPort: Revolutionizing the Logistics Industry Introduction NakilPort is an innovative platform designed to connect carriers and shippers, streamlining the logistics process for both parties. By leveraging modern web technologies, NakilPort offers a seamless experience for users, allowing carriers to find loads and shippers to find carriers efficiently. This article delves into the features, technologies, and benefits of NakilPort.\nOverview NakilPort aims to bridge the gap between carriers and shippers by providing a comprehensive solution that simplifies load matching and freight management. The platform is built with Next.js and Firebase, ensuring high performance, scalability, and security.\nKey Features Load and Carrier Matching: NakilPort allows carriers to find available loads quickly, while shippers can easily locate carriers that meet their specific requirements. This matching system optimizes the logistics process, reducing downtime and maximizing efficiency.\nResponsive Design: The platform features a responsive design, ensuring a seamless user experience across various devices, including desktops, tablets, and smartphones. This accessibility ensures that users can manage their logistics needs anytime, anywhere.\nUser Authentication: NakilPort employs robust user authentication mechanisms to ensure that only authorized users can access the platform. This security feature protects user data and maintains the integrity of the platform.\nRESTful API: The platform includes a RESTful API, enabling easy integration with other systems and services. This API allows developers to extend NakilPort’s functionality and customize it to meet specific business needs.\nMessaging System: NakilPort incorporates a messaging system that facilitates direct communication between carriers and shippers. This feature helps streamline negotiations and agreements, enhancing collaboration and reducing misunderstandings.\nAd Posting and Bidding: Shippers can post ads for available loads, and carriers can bid on these opportunities. This competitive bidding system ensures that shippers get the best rates while carriers find profitable loads.\nTechnologies Used Next.js: Next.js is a popular React framework that offers server-side rendering and static site generation. By using Next.js, NakilPort ensures fast loading times and a dynamic user experience. The framework\u0026rsquo;s flexibility and performance capabilities make it an ideal choice for building modern web applications. Firebase: Firebase serves as the backend for NakilPort, providing a suite of tools and services, including real-time database, authentication, and cloud functions. Firebase\u0026rsquo;s scalability and real-time capabilities allow NakilPort to handle large volumes of data and users efficiently. Development and Implementation Key aspects of the development process included:\nDesigning a user-friendly interface: The team focused on creating an intuitive and responsive design that caters to both carriers and shippers. Implementing secure authentication: Firebase Authentication was integrated to ensure secure and seamless user login and registration processes. Creating a RESTful API: The team developed a RESTful API to facilitate data exchange and integration with external systems. Optimizing performance: By leveraging Next.js’s server-side rendering, the team ensured that the platform remains fast and responsive, even under heavy load. Benefits NakilPort offers numerous benefits to its users, including: Increased Efficiency: By simplifying the process of finding loads and carriers, NakilPort reduces downtime and improves operational efficiency for both parties. Cost Savings: The competitive bidding system helps shippers find the best rates, while carriers can maximize their earnings by finding profitable loads. Enhanced Collaboration: The messaging system and responsive design foster better communication and collaboration between carriers and shippers. Scalability: Built with Next.js and Firebase, NakilPort can scale to accommodate growing user bases and increasing data volumes. ","permalink":"http://localhost:1313/projects/nakilport/","summary":"🔗 Github NakilPort: Revolutionizing the Logistics Industry Introduction NakilPort is an innovative platform designed to connect carriers and shippers, streamlining the logistics process for both parties. By leveraging modern web technologies, NakilPort offers a seamless experience for users, allowing carriers to find loads and shippers to find carriers efficiently. This article delves into the features, technologies, and benefits of NakilPort.\nOverview NakilPort aims to bridge the gap between carriers and shippers by providing a comprehensive solution that simplifies load matching and freight management.","title":"nakilport.com"},{"content":"🔗 Github 🔗 Live Project TayfunMarket: A New Standard in E-Commerce Introduction TayfunMarket aims to provide users with a dynamic e-commerce platform that offers a broad selection of products. The platform stands out due to its secure shopping experience and user-friendly interface. By offering affordable and high-quality products, TayfunMarket ensures a quick and easy shopping experience for its customers. The primary goal of this project is to enhance the online shopping experience across various product categories while prioritizing customer satisfaction. Features and Design\nResponsive Design: TayfunMarket is designed to be responsive, ensuring it works seamlessly on various devices, including desktops, tablets, and smartphones. The homepage allows easy access to promotions, trending products, best-sellers, daily deals, and new arrivals, enhancing user convenience and engagement.\nUser Notifications: Users receive notifications about product sales, encouraging them to explore similar products. This feature aims to boost user interaction and interest in the products.\nEmail Alerts for Discounts: A modal popup requests users\u0026rsquo; email addresses to keep them informed about discounts, ensuring they never miss a deal.\nResponsive Navigation Menu: A responsive navigation menu ensures users can easily access different pages on both mobile and desktop devices.\nProduct Details and Reviews: Clicking on a product’s photo or title takes users to a detailed view, where they can see more photos and read reviews from other customers. This feature helps users make informed purchase decisions.\nCategories Page: The categories page allows users to view all available categories and select specific ones to find products more easily.\nCampaigns Page: Users can view all ongoing campaigns and their details from the campaigns page. The homepage also features a campaign slider for quick access to campaign details.\nBlog Section: Each page on the website includes a blog section at the bottom, providing users with additional information and tips related to the products and shopping.\nFooter: The footer includes links to support and information pages, ensuring users can easily find help and additional information when needed.\nAdmin Panel: An admin panel is available for managing the website, collecting user and sales data, and ensuring smooth operation of the platform.\nTechnologies Used HTML and CSS: The foundation of TayfunMarket\u0026rsquo;s structure and styling is built using HTML and CSS. These technologies ensure the website is well-structured and visually appealing.\nBootstrap: Bootstrap is used to enhance the website’s responsiveness and design consistency across different devices and screen sizes.\nJavaScript: Pure JavaScript is employed to add interactivity and dynamic functionality to the website, ensuring a smooth and engaging user experience.\n","permalink":"http://localhost:1313/projects/tayfunmarket/","summary":"🔗 Github 🔗 Live Project TayfunMarket: A New Standard in E-Commerce Introduction TayfunMarket aims to provide users with a dynamic e-commerce platform that offers a broad selection of products. The platform stands out due to its secure shopping experience and user-friendly interface. By offering affordable and high-quality products, TayfunMarket ensures a quick and easy shopping experience for its customers. The primary goal of this project is to enhance the online shopping experience across various product categories while prioritizing customer satisfaction.","title":"Tayfun Market"}]