[{"content":"Description Working as a freelance MERN Stack Developer, contributing to various major projects with a focus on both web and mobile application development. Proactively engaged with clients to understand their needs, offering valuable suggestions and solutions. Developed and managed APIs, ensuring efficient and secure data exchange. Managed databases to maintain data integrity and optimal performance. Optimized server configurations to improve application speed and reliability. Language Learning Application: Collaborated with a team of approximately eight people to develop a comprehensive language learning application. Contributed to the development of the mobile application, web application, admin panel, and data entry components. Utilized a range of technologies including JavaScript, ReactJS, MongoDB, ExpressJS, Axios, Capacitor, Ionic, Framer Motion, and TailwindCSS. nakilport.com: Worked on a project for a company that connects truck drivers with loads and each other, designing the web application from scratch. Added features such as messaging, posting ads, and bidding, working with a team of six people. Employed technologies including Firebase, NextJS, and ESLint. Successfully utilized Next.js to build fast-loading, server-rendered React applications, enhancing performance and user experience. ","permalink":"http://localhost:1313/experience/freelance/","summary":"Description Working as a freelance MERN Stack Developer, contributing to various major projects with a focus on both web and mobile application development. Proactively engaged with clients to understand their needs, offering valuable suggestions and solutions. Developed and managed APIs, ensuring efficient and secure data exchange. Managed databases to maintain data integrity and optimal performance. Optimized server configurations to improve application speed and reliability. Language Learning Application: Collaborated with a team of approximately eight people to develop a comprehensive language learning application.","title":"MERN Stack Developer (Freelance)"},{"content":"Description Currently working as a Web Developer at Luckyeye, focusing on developing and maintaining web applications in a hybrid work environment. Utilizing ASP.NET and the .NET Framework to build robust, scalable, and efficient web applications. Implementing MVC architecture to separate concerns and improve the maintainability and scalability of applications. Managing web server configurations and deployments using Internet Information Services (IIS), ensuring reliable and secure web hosting. Designing and managing databases with Microsoft SQL Server, optimizing queries and database performance for high-traffic applications. Collaborating with cross-functional teams to gather requirements, design solutions, and deliver high-quality software. Continuously learning and adapting to new technologies and industry best practices to improve development processes and deliver better products. ","permalink":"http://localhost:1313/experience/web-developer/","summary":"Description Currently working as a Web Developer at Luckyeye, focusing on developing and maintaining web applications in a hybrid work environment. Utilizing ASP.NET and the .NET Framework to build robust, scalable, and efficient web applications. Implementing MVC architecture to separate concerns and improve the maintainability and scalability of applications. Managing web server configurations and deployments using Internet Information Services (IIS), ensuring reliable and secure web hosting. Designing and managing databases with Microsoft SQL Server, optimizing queries and database performance for high-traffic applications.","title":"Web Developer"},{"content":"Description Worked as a DevOps Engineering Intern, focusing on learning and supporting the automation and optimization of development and deployment processes. Developed and managed Docker containers for applications, enhancing my understanding of containerization and its benefits. Gained hands-on experience with Linux, including command-line operations, scripting, and system management, significantly improving my proficiency with the OS. Supported the configuration and basic management of PlusClouds own LEO services, learning the fundamentals of cloud infrastructure. Automated routine tasks using Bash scripts. Collaborated with senior team members to troubleshoot and resolve deployment issues, learning best practices and problem-solving techniques. Adapted to remote work, effectively communicating and collaborating with team members across different locations. ","permalink":"http://localhost:1313/experience/devops-intern/","summary":"Description Worked as a DevOps Engineering Intern, focusing on learning and supporting the automation and optimization of development and deployment processes. Developed and managed Docker containers for applications, enhancing my understanding of containerization and its benefits. Gained hands-on experience with Linux, including command-line operations, scripting, and system management, significantly improving my proficiency with the OS. Supported the configuration and basic management of PlusClouds own LEO services, learning the fundamentals of cloud infrastructure.","title":"DevOps Engineering Intern"},{"content":"Description Worked as a Decentralized Application Developer at Cuberium, focusing on blockchain technologies and Web3 development. Gained in-depth knowledge of major blockchain technologies, understanding their mechanisms, use cases, and the concept of Non-Fungible Tokens (NFTs). Studied various consensus algorithms, learning how they ensure security and agreement in decentralized networks. Conducted research on the current applications and future potential of blockchain technology, enhancing my understanding of its impact and opportunities. Developed smart contracts using Solidity, ensuring secure and reliable operations on the Ethereum blockchain. Built a Web3 NFT minting site using ReactJS and Solidity, allowing users to create and manage NFTs through a decentralized application. Collaborated with team members to design and implement blockchain-based solutions, contributing to the development of innovative decentralized applications. Continuously explored new trends and advancements in blockchain technology to stay up-to-date and improve my skills. ","permalink":"http://localhost:1313/experience/cuberium/","summary":"Description Worked as a Decentralized Application Developer at Cuberium, focusing on blockchain technologies and Web3 development. Gained in-depth knowledge of major blockchain technologies, understanding their mechanisms, use cases, and the concept of Non-Fungible Tokens (NFTs). Studied various consensus algorithms, learning how they ensure security and agreement in decentralized networks. Conducted research on the current applications and future potential of blockchain technology, enhancing my understanding of its impact and opportunities. Developed smart contracts using Solidity, ensuring secure and reliable operations on the Ethereum blockchain.","title":"Decentralized Application Developer"},{"content":"Description Participated in the Siber Vatan program, receiving extensive training in various areas of cyber security. Completed courses on “Cyber Security for Linux”, “Penetration Testing”, “Social Engineering”, “Certified Ethical Hacker (CEH)”, “Web Security”, “Reverse Engineering”, and “Blockchain”. Worked collaboratively with peers who shared similar interests, enhancing our collective knowledge and skills in cyber security. Gained practical experience through hands-on exercises and simulations, applying theoretical knowledge to real-world scenarios. Developed a strong foundation in Linux, learning essential command-line operations, scripting, and system security practices. Conducted penetration tests to identify and mitigate vulnerabilities in systems and networks, improving my ethical hacking skills. Explored social engineering techniques and learned how to protect against such attacks, understanding the human element in cyber security. Studied web security principles, learning to secure web applications against common threats and vulnerabilities. Delved into reverse engineering, gaining insights into how software and systems can be analyzed and deconstructed. Investigated blockchain technology and its applications in cyber security, understanding its potential and limitations. Engaged in continuous learning and development, staying up-to-date with the latest trends and advancements in the field of cyber security. ","permalink":"http://localhost:1313/experience/sibervatan/","summary":"Description Participated in the Siber Vatan program, receiving extensive training in various areas of cyber security. Completed courses on “Cyber Security for Linux”, “Penetration Testing”, “Social Engineering”, “Certified Ethical Hacker (CEH)”, “Web Security”, “Reverse Engineering”, and “Blockchain”. Worked collaboratively with peers who shared similar interests, enhancing our collective knowledge and skills in cyber security. Gained practical experience through hands-on exercises and simulations, applying theoretical knowledge to real-world scenarios. Developed a strong foundation in Linux, learning essential command-line operations, scripting, and system security practices.","title":"Student"},{"content":"Description Assisted students in the Computer Lab, providing guidance and support in understanding and using various software tools, particularly focusing on C# programming. Conducted regular lab sessions, helping students troubleshoot their code and understand complex programming concepts, which enhanced their learning experience and academic performance. Developed and implemented structured lesson plans and lab exercises that reinforced theoretical knowledge with practical application, particularly in C#. Maintained and managed the lab environment, ensuring that all computer systems and software were up-to-date and functioning properly, contributing to a seamless learning experience. Collaborated with faculty members to align lab activities with the course curriculum, ensuring that the practical sessions complemented the theoretical lessons effectively. Enhanced my own C# programming skills through constant practice and by solving a variety of coding challenges and projects, significantly boosting my proficiency in the language. Actively supported students during exam preparations by organizing review sessions and providing additional resources and guidance, helping them achieve better results. Fostered a collaborative and supportive learning environment, encouraging peer-to-peer learning and teamwork among students. ","permalink":"http://localhost:1313/experience/computer-lab-assistant/","summary":"Description Assisted students in the Computer Lab, providing guidance and support in understanding and using various software tools, particularly focusing on C# programming. Conducted regular lab sessions, helping students troubleshoot their code and understand complex programming concepts, which enhanced their learning experience and academic performance. Developed and implemented structured lesson plans and lab exercises that reinforced theoretical knowledge with practical application, particularly in C#. Maintained and managed the lab environment, ensuring that all computer systems and software were up-to-date and functioning properly, contributing to a seamless learning experience.","title":"Computer Lab Assistant"},{"content":"Description Founding member and captain of the Cyberus Cyber Security Team at Kocaeli University, a volunteer role dedicated to promoting cyber security awareness and skills. Led the team as captain for the first year, coordinating team activities, managing projects, and fostering a collaborative and motivated team environment. Organized and delivered training sessions on cyber security and Linux, providing team members with the necessary skills and knowledge to excel in the field. Developed and implemented team strategies for participating in cyber security competitions and challenges, enhancing the team\u0026rsquo;s performance and reputation. Actively contributed to the growth and development of the team from its inception, playing a key role in establishing a strong foundation and culture of learning. Facilitated workshops and seminars on various cyber security topics, engaging the university community and raising awareness about the importance of cyber security. ","permalink":"http://localhost:1313/experience/cyberus/","summary":"Description Founding member and captain of the Cyberus Cyber Security Team at Kocaeli University, a volunteer role dedicated to promoting cyber security awareness and skills. Led the team as captain for the first year, coordinating team activities, managing projects, and fostering a collaborative and motivated team environment. Organized and delivered training sessions on cyber security and Linux, providing team members with the necessary skills and knowledge to excel in the field.","title":"Founding Member and Captain - Cyberus Cyber Security Team"},{"content":"Description Volunteered as a Cyber Security Instructor at Başiskele Municipality\u0026rsquo;s Children’s University, teaching selected children about the fundamentals of cyber security. Designed and delivered engaging and age-appropriate lessons on cyber security topics, including safe online behavior, basic principles of digital security, and an introduction to Linux. Fostered a positive and interactive learning environment, encouraging students to ask questions and participate in hands-on activities. Developed and utilized various teaching materials and resources to make complex concepts accessible and interesting for young learners. Collaborated with the Children\u0026rsquo;s University staff to align the curriculum with educational goals and ensure the effectiveness of the training program. Mentored and guided students through practical exercises and projects, helping them develop critical thinking and problem-solving skills related to cyber security. Received positive feedback from both students and parents, highlighting the program\u0026rsquo;s success in raising cyber security awareness among children. ","permalink":"http://localhost:1313/experience/cyber-security-instructor/","summary":"Description Volunteered as a Cyber Security Instructor at Başiskele Municipality\u0026rsquo;s Children’s University, teaching selected children about the fundamentals of cyber security. Designed and delivered engaging and age-appropriate lessons on cyber security topics, including safe online behavior, basic principles of digital security, and an introduction to Linux. Fostered a positive and interactive learning environment, encouraging students to ask questions and participate in hands-on activities. Developed and utilized various teaching materials and resources to make complex concepts accessible and interesting for young learners.","title":"Cyber Security Instructor"},{"content":"Intro In my video about How I cleared the AWS SAA Certification Exam, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac. Once I\u0026rsquo;m done editing my notes, I push them to a GitHub repository to make sure I don\u0026rsquo;t lose them if my laptop breaks.\nSo, if you want to view my notes exactly like I do, you can clone my Obsidian Vault repository and download Obsidian to render it. But, this solution isn\u0026rsquo;t elegant as it would require you to download an additional software. So, I along with my college roommate, Sarthak Narayan, had been working over the past 2 weeks on the project, Obsidian Publish using GitHub Action, which would allow us to effortlessly publish our notes as a static website.\nIt is complete and I\u0026rsquo;ve used it to publish my notes at notes.arkalim.org. Working The GitHub Action spins up a Docker container which parses and converts Obsidian markdown notes into a special markdown format understood by MkDocs, an open-source static site generator. MkDocs is actually meant for preparing documentations but works well for notes too. After the markdown files have been converted, all the images in my notes are compressed to a fraction of their original size so that they can load quickly in your web browser. A static site is then built using MkDocs and then finally deployed on Netlify. All of this happens automatically using GitHub Actions. All I have to do is update my notes and push the changes to GitHub.\nFinal thoughts Having an automated way to publish your notes online with the community is a powerful way to share knowledge. This project has also made it exceedingly easy for me to refer my notes from anywhere, which is powerful when you work on a lot of systems.\nResources My Notes Obsidian Publish - GitHub Action Parser and Image Compressor MkDocs - Material Theme ","permalink":"http://localhost:1313/projects/obsidian-publish-github-action/","summary":"Intro In my video about How I cleared the AWS SAA Certification Exam, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac.","title":"Obsidian Publish using GitHub Action"},{"content":"🔗 GitHub Description I like reading personal improvement and mindset change type books on Kindle e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\nKindle exports the highlights as a file named MyClippings.txt. The NodeJS application reads the MyClipping.txt file exported by Kindle, parses it using Regex, extracts all the highlights, book names, highlight time etc and creates a JSON. It then uses Notion API to sync these highlights to a database in my Notion workspace. The app maintains a cache (JSON) containing the number of highlights synced for each book. This allows the highlights to be synced incrementally, preventing re-syncing of old highlights.\nAfter the app was received well by the open-source community and other developers contributed to improve the app, I dockerized it to make shipping the app easier. Now, the users don’t have to install any dependency. They can just use the docker run command with the path to their clippings file along with their Notion API key and database ID. This would sync their highlights to their Notion database.\nAs a part of automation, I implemented auto build and deployment of containers on push to the master branch using GitHub Actions. If a developer raises a pull request and I merge it to the master branch, the GitHub workflow automatically builds the app and deploys it to GitHub packages repository.\n","permalink":"http://localhost:1313/projects/kindle-to-notion/","summary":"🔗 GitHub Description I like reading personal improvement and mindset change type books on Kindle e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\nKindle exports the highlights as a file named MyClippings.","title":"Kindle to Notion"},{"content":"🔗 View App 🔗 GitHub Description A to-do list web application built using React that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning React.\n","permalink":"http://localhost:1313/projects/todo-list-app/","summary":"🔗 View App 🔗 GitHub Description A to-do list web application built using React that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning React.","title":"Todo List App"},{"content":"🔗 Colab Notebook 🔗 Blog Post Description In this project, I trained a neural network to localize key points on faces. Resnet-18 was used as the model with some slight modifications to the input and output layer. The model was trained on the official DLib Dataset containing 6666 images along with corresponding 68-point landmarks for each face. Additionally, I wrote a custom data preprocessing pipeline in PyTorch to increase variance in the input images to help the model generalize better. The neural network was trained for 30 epochs before it reached the optima.\nDuring inference, OpenCV Harr Cascades are used to detect faces in the input images. Detected faces are then cropped, resized to (224, 224), and fed to our trained neural network to predict landmarks in them. The predicted landmarks in the cropped faces are then overlayed on top of the original image.\n","permalink":"http://localhost:1313/projects/face-landmarks-detection/","summary":"🔗 Colab Notebook 🔗 Blog Post Description In this project, I trained a neural network to localize key points on faces. Resnet-18 was used as the model with some slight modifications to the input and output layer. The model was trained on the official DLib Dataset containing 6666 images along with corresponding 68-point landmarks for each face. Additionally, I wrote a custom data preprocessing pipeline in PyTorch to increase variance in the input images to help the model generalize better.","title":"Face Landmarks Detection using CNN"},{"content":"Description The aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre. Various important parameters such as pupil velocity, acceleration, and fixation time were calculated for further statistical analysis. Single Shot Descriptor, with VGG16 as backbone, was used to detect the objects the user was gazing at. Additionally, a GUI was made using TkInter for ease of use.\n","permalink":"http://localhost:1313/projects/gaze-tracking-goggles/","summary":"Description The aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre.","title":"Gaze-tracking Goggles"},{"content":"🔗 GitHub Description The aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a Pixhawk flight controller with Raspberry Pi as a companion computer. DJI Flame Wheel-450 is used for the quadcopter frame along with some custom mountings for adding additional components.\nRaspberry Pi runs a ROS node which communicates with another ROS node running on the host PC to transfer videos over Wi-Fi. To make the project open-source, easy to develop, and easily reproducible, the simulation environment setup has been dockerized using docker container. We are currently developing the algorithms and testing them in Gazebo Simulation.\n","permalink":"http://localhost:1313/projects/openquad/","summary":"🔗 GitHub Description The aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a Pixhawk flight controller with Raspberry Pi as a companion computer. DJI Flame Wheel-450 is used for the quadcopter frame along with some custom mountings for adding additional components.","title":"OpenQuad"},{"content":" Presented in the 4th International and 19th National Conference on Machine and Mechanisms (iNaCoMM 2019)\nPublished in the Springer 2019\n🔗 Publication Description Natural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris. This will assist the rescue team to focus on recovering the victims, leaving the locating task for the Robots. The unique features of the SRR above existing ATVs are active-articulation, modularity, and assisted-autonomy. Active-articulation allows the SRR to climb objects much tall than itself. Modularity allows the SRR to detach into smaller modules to enter tight spaces where the whole body can’t fit. Assisted-autonomy allows the SRR to detect the presence of objects in front and climb autonomously over them.\n","permalink":"http://localhost:1313/projects/search-and-reconnaissance-robot/","summary":"Presented in the 4th International and 19th National Conference on Machine and Mechanisms (iNaCoMM 2019)\nPublished in the Springer 2019\n🔗 Publication Description Natural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris.","title":"Search and Reconnaissance Robot"},{"content":"Description I worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. SEBART-Pro is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an Arduino Nano as the microcontroller. The robot senses the tilt using an MPU-6050 (6-axis gyroscope and accelerometer) and converts the values from these sensors into angles using a Kalman Filter. It uses the PID control algorithm to balance on two wheels and a simple Convolutional Neural Network is used to recognize traffic signs.\n","permalink":"http://localhost:1313/projects/sebart-pro/","summary":"Description I worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. SEBART-Pro is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an Arduino Nano as the microcontroller. The robot senses the tilt using an MPU-6050 (6-axis gyroscope and accelerometer) and converts the values from these sensors into angles using a Kalman Filter.","title":"SEBART-Pro"},{"content":"Merhaba Dünya! Selam, ben Tayfun. ","permalink":"http://localhost:1313/blog/hello-world/","summary":"Merhaba Dünya! Selam, ben Tayfun. ","title":"Hello World"}]